'use client';

import { useState, useEffect } from 'react';
import { 
  ShieldCheckIcon, 
  ExclamationTriangleIcon, 
  GlobeAltIcon, 
  HeartIcon,
  CheckCircleIcon 
} from '@heroicons/react/24/outline';

interface DashboardStats {
  isProtected: boolean;
  lastScanTime: string;
  threatsBlocked: number;
  darkWebStatus: 'monitoring' | 'alert' | 'safe';
  systemHealth: number;
}

export default function Dashboard() {
  const [stats, setStats] = useState<DashboardStats>({
    isProtected: true,
    lastScanTime: '2 hours ago',
    threatsBlocked: 147,
    darkWebStatus: 'safe',
    systemHealth: 98
  });

  const getSystemHealthColor = (health: number) => {
    if (health >= 90) return 'text-green-400';
    if (health >= 70) return 'text-yellow-400';
    return 'text-red-400';
  };

  const getDarkWebStatusText = (status: string) => {
    switch (status) {
      case 'monitoring':
        return 'Monitoring Active';
      case 'alert':
        return 'Alert Detected';
      case 'safe':
        return 'No Issues Found';
      default:
        return 'Unknown';
    }
  };

  const getDarkWebStatusColor = (status: string) => {
    switch (status) {
      case 'monitoring':
        return 'text-blue-400';
      case 'alert':
        return 'text-red-400';
      case 'safe':
        return 'text-green-400';
      default:
        return 'text-gray-400';
    }
  };

  return (
    <div className="min-h-screen bg-gray-900 p-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-white mb-2">Security Dashboard</h1>
          <p className="text-gray-400">Monitor your system's protection status</p>
        </div>

        {/* Main Status Card */}
        <div className="bg-gray-800 rounded-2xl p-8 mb-8 border border-gray-700">
          <div className="flex items-center justify-center mb-6">
            {stats.isProtected ? (
              <div className="flex items-center space-x-4">
                <div className="bg-green-500/20 p-4 rounded-full">
                  <CheckCircleIcon className="h-12 w-12 text-green-400" />
                </div>
                <div>
                  <h2 className="text-3xl font-bold text-white">Your system is protected</h2>
                  <p className="text-green-400 text-lg">All security features are active</p>
                </div>
              </div>
            ) : (
              <div className="flex items-center space-x-4">
                <div className="bg-red-500/20 p-4 rounded-full">
                  <ExclamationTriangleIcon className="h-12 w-12 text-red-400" />
                </div>
                <div>
                  <h2 className="text-3xl font-bold text-white">Action required</h2>
                  <p className="text-red-400 text-lg">Your system needs attention</p>
                </div>
              </div>
            )}
          </div>
        </div>

        {/* Feature Cards Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {/* Scans Card */}
          <div className="bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-purple-500/50 transition-colors">
            <div className="flex items-center justify-between mb-4">
              <div className="bg-purple-500/20 p-3 rounded-lg">
                <ShieldCheckIcon className="h-8 w-8 text-purple-400" />
              </div>
            </div>
            <h3 className="text-xl font-semibold text-white mb-2">Scans</h3>
            <p className="text-gray-400 mb-3">System Protection</p>
            <div className="text-sm">
              <span className="text-gray-300">Last scan: </span>
              <span className="text-purple-400 font-medium">{stats.lastScanTime}</span>
            </div>
            <button className="mt-4 w-full bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg transition-colors">
              Run Quick Scan
            </button>
          </div>

          {/* Threats Blocked Card */}
          <div className="bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-purple-500/50 transition-colors">
            <div className="flex items-center justify-between mb-4">
              <div className="bg-orange-500/20 p-3 rounded-lg">
                <ExclamationTriangleIcon className="h-8 w-8 text-orange-400" />
              </div>
            </div>
            <h3 className="text-xl font-semibold text-white mb-2">Threats Blocked</h3>
            <p className="text-gray-400 mb-3">Real-time Protection</p>
            <div className="text-3xl font-bold text-orange-400 mb-2">{stats.threatsBlocked}</div>
            <div className="text-sm text-gray-300">This month</div>
          </div>

          {/* Dark Web Monitoring Card */}
          <div className="bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-purple-500/50 transition-colors">
            <div className="flex items-center justify-between mb-4">
              <div className="bg-blue-500/20 p-3 rounded-lg">
                <GlobeAltIcon className="h-8 w-8 text-blue-400" />
              </div>
            </div>
            <h3 className="text-xl font-semibold text-white mb-2">Dark Web Monitoring</h3>
            <p className="text-gray-400 mb-3">Identity Protection</p>
            <div className={`text-lg font-semibold mb-2 ${getDarkWebStatusColor(stats.darkWebStatus)}`}>
              {getDarkWebStatusText(stats.darkWebStatus)}
            </div>
            <div className="text-sm text-gray-300">Continuous monitoring</div>
          </div>

          {/* System Health Card */}
          <div className="bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-purple-500/50 transition-colors">
            <div className="flex items-center justify-between mb-4">
              <div className="bg-green-500/20 p-3 rounded-lg">
                <HeartIcon className="h-8 w-8 text-green-400" />
              </div>
            </div>
            <h3 className="text-xl font-semibold text-white mb-2">System Health</h3>
            <p className="text-gray-400 mb-3">Performance Monitor</p>
            <div className={`text-3xl font-bold mb-2 ${getSystemHealthColor(stats.systemHealth)}`}>
              {stats.systemHealth}%
            </div>
            <div className="w-full bg-gray-700 rounded-full h-2 mb-2">
              <div 
                className="bg-gradient-to-r from-purple-500 to-green-400 h-2 rounded-full transition-all duration-500"
                style={{ width: `${stats.systemHealth}%` }}
              ></div>
            </div>
            <div className="text-sm text-gray-300">Excellent</div>
          </div>
        </div>

        {/* Quick Actions */}
        <div className="mt-8 bg-gray-800 rounded-xl p-6 border border-gray-700">
          <h3 className="text-xl font-semibold text-white mb-4">Quick Actions</h3>
          <div className="flex flex-wrap gap-4">
            <button className="bg-purple-600 hover:bg-purple-700 text-white py-2 px-6 rounded-lg transition-colors">
              Full System Scan
            </button>
            <button className="bg-gray-700 hover:bg-gray-600 text-white py-2 px-6 rounded-lg transition-colors">
              Update Definitions
            </button>
            <button className="bg-gray-700 hover:bg-gray-600 text-white py-2 px-6 rounded-lg transition-colors">
              View Security Report
            </button>
            <button className="bg-gray-700 hover:bg-gray-600 text-white py-2 px-6 rounded-lg transition-colors">
              Settings
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}